/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { Directive, Input, TemplateRef } from '@angular/core';
/**
 * Template to be used to override the icons inside the step header.
 */
import * as ɵngcc0 from '@angular/core';
let MatStepperIcon = /** @class */ (() => {
    class MatStepperIcon {
        constructor(templateRef) {
            this.templateRef = templateRef;
        }
    }
MatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };
MatStepperIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [["ng-template", "matStepperIcon", ""]], inputs: { name: ["matStepperIcon", "name"] } });
    MatStepperIcon.ctorParameters = () => [
        { type: TemplateRef }
    ];
    MatStepperIcon.propDecorators = {
        name: [{ type: Input, args: ['matStepperIcon',] }]
    };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{
        type: Directive,
        args: [{
                selector: 'ng-template[matStepperIcon]'
            }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{
            type: Input,
            args: ['matStepperIcon']
        }] }); })();
    return MatStepperIcon;
})();
export { MatStepperIcon };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1pY29uLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbWF0ZXJpYWwvc3RlcHBlci9zdGVwcGVyLWljb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUVILE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQWE1RDtBQUNBO0FBQ0EsR0FBRzs7QUFDSDtBQUMrQixJQUQvQixNQUdhLGNBQWM7QUFDM0IsUUFHRSxZQUFtQixXQUErQztBQUFJLFlBQW5ELGdCQUFXLEdBQVgsV0FBVyxDQUFvQztBQUFDLFFBQUUsQ0FBQztBQUN4RTtrREFSQyxTQUFTLFNBQUMsc0JBQ1QsUUFBUSxFQUFFLDZCQUE2QjtNQUN4QyxxS0FDUTtBQUFDO0FBQ2MsZ0JBcEJFLFdBQVc7QUFBRztBQUFPO0FBQ3ZCLHVCQW9CckIsS0FBSyxTQUFDLGdCQUFnQjtBQUFNOzs7Ozs7Ozs7b0JBQU07QUFBQyxJQUd0QyxxQkFBQztBQUNBLEtBREE7QUFDRCxTQU5hLGNBQWM7QUFDMUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuaW1wb3J0IHtEaXJlY3RpdmUsIElucHV0LCBUZW1wbGF0ZVJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1N0ZXBTdGF0ZX0gZnJvbSAnQGFuZ3VsYXIvY2RrL3N0ZXBwZXInO1xuXG4vKiogVGVtcGxhdGUgY29udGV4dCBhdmFpbGFibGUgdG8gYW4gYXR0YWNoZWQgYG1hdFN0ZXBwZXJJY29uYC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgTWF0U3RlcHBlckljb25Db250ZXh0IHtcbiAgLyoqIEluZGV4IG9mIHRoZSBzdGVwLiAqL1xuICBpbmRleDogbnVtYmVyO1xuICAvKiogV2hldGhlciB0aGUgc3RlcCBpcyBjdXJyZW50bHkgYWN0aXZlLiAqL1xuICBhY3RpdmU6IGJvb2xlYW47XG4gIC8qKiBXaGV0aGVyIHRoZSBzdGVwIGlzIG9wdGlvbmFsLiAqL1xuICBvcHRpb25hbDogYm9vbGVhbjtcbn1cblxuLyoqXG4gKiBUZW1wbGF0ZSB0byBiZSB1c2VkIHRvIG92ZXJyaWRlIHRoZSBpY29ucyBpbnNpZGUgdGhlIHN0ZXAgaGVhZGVyLlxuICovXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICduZy10ZW1wbGF0ZVttYXRTdGVwcGVySWNvbl0nLFxufSlcbmV4cG9ydCBjbGFzcyBNYXRTdGVwcGVySWNvbiB7XG4gIC8qKiBOYW1lIG9mIHRoZSBpY29uIHRvIGJlIG92ZXJyaWRkZW4uICovXG4gIEBJbnB1dCgnbWF0U3RlcHBlckljb24nKSBuYW1lOiBTdGVwU3RhdGU7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxNYXRTdGVwcGVySWNvbkNvbnRleHQ+KSB7fVxufVxuIl19